{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","props","value","handleChange","text","onChange","PersonForm","handleSubmission","nameValue","handleNameChange","numberValue","handleNumberChange","onSubmit","type","Persons","list","filterString","handleDelete","filter","person","name","toLowerCase","search","map","number","onClick","Notification","message","messageStyle","color","successful","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","baseURL","deleteUsingID","id","axios","delete","then","response","data","exports","getAll","get","create","newObject","post","update","put","deleteUsingObject","object","App","useState","persons","setPersons","query","setQuery","newName","setNewName","newNumber","setNewNumber","setMessage","resetForm","useEffect","console","log","personService","length","event","target","preventDefault","newPerson","matchResult","find","undefined","window","confirm","updatedPerson","setTimeout","catch","error","concat","numebrValue","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0258c744.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n\tconst { value, handleChange, text } = props\n\n\treturn (\n\t\t<div>\n\t\t\t{text} <input\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={handleChange}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n\tconst {\n\t\thandleSubmission,\n\t\tnameValue,\n\t\thandleNameChange,\n\t\tnumberValue,\n\t\thandleNumberChange,\n\t} = props\n\n\treturn (\n\t\t<form onSubmit={handleSubmission}>\n\t\t\t<div>\n\t\t\t\tname: <input\n\t\t\t\t\tvalue={nameValue}\n\t\t\t\t\tonChange={handleNameChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\tnumber: <input\n\t\t\t\t\tvalue={numberValue}\n\t\t\t\t\tonChange={handleNumberChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button type=\"submit\">add</button>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = (props) => {\n\tconst { list, filterString, handleDelete } = props\n\n\treturn (\n\t\t<ul>\n\t\t\t{\n\t\t\t\tlist.filter(person =>\n\t\t\t\t\tperson.name.toLowerCase().search(filterString.toLowerCase()) !== -1\n\t\t\t\t)\n\t\t\t\t\t.map(person =>\n\t\t\t\t\t\t<li key={person.name}>\n\t\t\t\t\t\t\t{person.name} {person.number}\n\t\t\t\t\t\t\t<button onClick={handleDelete(person)}>delete</button>\n\t\t\t\t\t\t</li>)\n\t\t\t}\n\t\t</ul>\n\t)\n}\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({ message }) => {\n\tif (message === null) {\n\t\treturn <div></div>\n\t}\n\n\tconst { text, successful } = message\n\n\tconst messageStyle = {\n\t\tcolor: successful ? 'green' : 'red',\n\t\tbackground: 'lightgrey',\n\t\tfontSize: 20,\n\t\tborderStyle: 'solid',\n\t\tborderRadius: 5,\n\t\tpadding: 10,\n\t\tmarginBottom: 10\n\t}\n\n\treturn (\n\t\t<div style={messageStyle}>\n\t\t\t{text}\n\t\t</div>\n\t)\n}\n\nexport default Notification","import axios from 'axios'\n\nconst baseURL = '/api/persons'\n\nconst getAll = () => {\n\tconst request = axios.get(baseURL)\n\treturn request.then(response => response.data)\n}\n\nconst create = newObject => {\n\tconst request = axios.post(baseURL, newObject)\n\treturn request.then(response => response.data)\n}\n\n// Not required to be completed at this point\nconst update = (id, newObject) => {\n\tconst request = axios.put(`${baseURL}/${id}`, newObject)\n\treturn request.then(response => response.data)\n}\n\nconst deleteUsingID = id => {\n\tconst request = axios.delete(`${baseURL}/${id}`)\n\treturn request.then(response => response.data)\n}\n\nconst deleteUsingObject = object => {\n\treturn deleteUsingID(object.id)\n}\n\nconst exports =  {\n\tgetAll,\n\tcreate,\n\tupdate,\n\tdeleteUsingID,\n\tdeleteUsingObject,\n}\n\nexport default exports","import React, { useEffect, useState } from 'react'\n\n// import React components\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nimport personService from './services/persons'\n\nconst App = () => {\n  // state\n  const [persons, setPersons] = useState([])\n  const [query, setQuery] = useState('')\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  // Message example:\n  // { text: \"Text\", successful: true }\n  const [message, setMessage] = useState(null)\n\n  // reset form\n  const resetForm = () => {\n    setNewName('')\n    setNewNumber('')\n  }\n\n  // load data from server\n  useEffect(() => {\n    console.log('effect')\n    personService\n      .getAll()\n      .then(persons => {\n        console.log('promise fulfilled')\n        setPersons(persons)\n      })\n  }, [])\n  console.log('rendered', persons.length, 'persons')\n\n  // modifies state when an input is changed\n  const handleQueryChange = event => {\n    console.log(event.target.value)\n    setQuery(event.target.value)\n  }\n  const handleNewNameChange = event => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNewNumberChange = event => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  // adds a person object to the list of persons\n  const addName = event => {\n    event.preventDefault()\n    console.log('attempting to add name')\n\n    // check for empty name\n    if (newName === '') {\n      console.log('empty name was not submitted')\n      return\n    }\n\n    // create person object using name and number\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    }\n    console.log('new person', newPerson)\n\n    // check for duplicates, prompts for replacement if duplicate found\n    const matchResult = persons.find(person => person.name === newName)\n    console.log('found match:', matchResult)\n\n    if (matchResult !== undefined\n      && window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n\n      personService\n        .update(matchResult.id, newPerson)\n        .then(updatedPerson => {\n          console.log('updated person', updatedPerson)\n          // update the array with the replaced person\n          setPersons(persons.map(person => {\n            return person.id === updatedPerson.id ? updatedPerson : person\n          }))\n          // reset forms\n          resetForm()\n        })\n        .then(() => {\n          setMessage({ text: `Updated ${newName}`, successful: true })\n          setTimeout(() => setMessage(null), 5000)\n        })\n        // handle updating of entries that do not exist\n        .catch(error => {\n          console.error(error.response.data)\n          if (error.response.data.error.search('shorter than')) {\n            setMessage({\n              text: error.response.data.error,\n              successful: false\n            })\n          } else {\n            console.log('A')\n            setPersons(persons.filter(person => {\n              return person.id !== matchResult.id\n            }))\n            setMessage({\n              text: error.response.data.error,\n              successful: false\n            })\n          }\n          setTimeout(() => setMessage(null), 5000)\n        })\n        .catch(error => {\n          console.log('B')\n          setPersons(persons.filter(person => {\n            return person.id !== matchResult.id\n          }))\n          setMessage({\n            text: `Information of ${matchResult.name} has already been removed from server`,\n            successful: false\n          })\n          setTimeout(() => setMessage(null), 5000)\n        })\n\n\n\n      return\n    }\n\n    // save data to server if there are no issues\n    personService\n      .create(newPerson)\n      .then(person => {\n        // concat person object to list\n        setPersons(persons.concat(person))\n        // reset forms\n        resetForm()\n        console.log('new person added to list', persons, newPerson)\n      })\n      .then(() => {\n        // set message\n        setMessage({ text: `Added ${newName}`, successful: true })\n        setTimeout(() => setMessage(null), 5000)\n      })\n      .catch(error => {\n        console.error(error.response.data)\n        // set error message\n        setMessage({ text: error.response.data.error, successful: false })\n        setTimeout(() => setMessage(null), 5000)\n      })\n\n  }\n\n  // creates a function that deletes a specified person object upon confirmation\n  const deletePerson = (person) => {\n    return () => {\n      if (window.confirm(`Delete ${person.name}?`)) {\n        personService\n          .deleteUsingObject(person)\n          .then(data => {\n            // remove person from display\n            setPersons(persons.filter(p => p !== person))\n            // show message\n            setMessage({ text: `Deleted ${person.name}`, successful: true })\n            setTimeout(() => setMessage(null), 5000)\n          })\n      }\n    }\n  }\n\n  console.log('rendering with', persons)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter\n        value={query}\n        handleChange={handleQueryChange}\n        text=\"filter shown with\"\n      />\n\n      <h2>add a new</h2>\n      <PersonForm\n        handleSubmission={addName}\n        nameValue={newName}\n        handleNameChange={handleNewNameChange}\n        numebrValue={newNumber}\n        handleNumberChange={handleNewNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      <Persons\n        list={persons}\n        filterString={query}\n        handleDelete={deletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}